name: Build Teams Filter APK

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y zip unzip openjdk-17-jdk python3-pip \
          libffi-dev libssl-dev libsqlite3-dev libbz2-dev \
          libreadline-dev build-essential git wget

    - name: Set up Android SDK
      run: |
        mkdir -p ~/android-sdk/cmdline-tools
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d ~/android-sdk/cmdline-tools
        mv ~/android-sdk/cmdline-tools/cmdline-tools ~/android-sdk/cmdline-tools/latest

        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/34.0.0:$PATH" >> $GITHUB_ENV

        yes | ~/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        ~/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"

    - name: Configure Buildozer environment
      run: |
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

        sed -i '/^android.sdk =/d' buildozer.spec
        sed -i '/^android.ndk =/d' buildozer.spec
        sed -i '/^android.build_tools_version =/d' buildozer.spec
        echo -e "\nandroid.sdk = 34\nandroid.ndk = 25b\nandroid.build_tools_version = 34.0.0" >> buildozer.spec

    - name: Install Buildozer and dependencies
      run: |
        pip install --upgrade cython virtualenv buildozer

    - name: Clean previous builds (safe)
      if: ${{ hashFiles('.buildozer/android/platform/**') != '' }}
      run: |
        buildozer android clean
        rm -rf .buildozer

    - name: Build APK with debug output
      run: |
        buildozer -v android debug 2>&1 | tee build.log
        if [ $? -ne 0 ]; then
          echo "BUILD_FAILED=true" >> $GITHUB_ENV
        fi

    - name: Upload build log on failure
      if: env.BUILD_FAILED == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: build.log

    - name: Upload APK Artifact
      if: success() || failure()
      uses: actions/upload-artifact@v4
      with:
        name: teamsfilter-apk
        path: bin/*.apk
